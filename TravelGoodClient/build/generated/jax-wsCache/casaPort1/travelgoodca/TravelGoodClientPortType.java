
package travelgoodca;

import java.math.BigInteger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import com.dtu.mmmngg.GetFlightsResponse;
import com.niceview.GetHotelsResponse;
import dk.dtu.imm.fastmoney.types.CreditCardInfoType;
import org.netbeans.j2ee.wsdl.travelgoodbpel.src.travelgoodclient.FlightList;
import org.netbeans.j2ee.wsdl.travelgoodbpel.src.travelgoodclient.HotelList;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TravelGoodClientPortType", targetNamespace = "http://j2ee.netbeans.org/wsdl/TravelGoodBPEL/src/TravelGoodClient")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    dk.dtu.imm.fastmoney.types.ObjectFactory.class,
    org.netbeans.j2ee.wsdl.travelgoodbpel.src.travelgoodclient.ObjectFactory.class,
    com.dtu.mmmngg.ObjectFactory.class,
    com.niceview.ObjectFactory.class
})
public interface TravelGoodClientPortType {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "uid", partName = "uid")
    public String createItinerary(
        @WebParam(name = "name", partName = "name")
        String name);

    /**
     * 
     * @param uid
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "ok", partName = "ok")
    public boolean cancelItinerary(
        @WebParam(name = "uid", partName = "uid")
        String uid);

    /**
     * 
     * @param uid
     * @param from
     * @param to
     * @param departureDate
     * @return
     *     returns com.dtu.mmmngg.GetFlightsResponse
     */
    @WebMethod
    @WebResult(name = "flightList", partName = "flightList")
    public GetFlightsResponse getFlights(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "from", partName = "from")
        String from,
        @WebParam(name = "to", partName = "to")
        String to,
        @WebParam(name = "departureDate", partName = "departureDate")
        XMLGregorianCalendar departureDate);

    /**
     * 
     * @param uid
     * @param city
     * @param departureDate
     * @param arrivalDate
     * @return
     *     returns com.niceview.GetHotelsResponse
     */
    @WebMethod
    @WebResult(name = "hotelList", partName = "hotelList")
    public GetHotelsResponse getHotels(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "arrivalDate", partName = "arrivalDate")
        XMLGregorianCalendar arrivalDate,
        @WebParam(name = "departureDate", partName = "departureDate")
        XMLGregorianCalendar departureDate,
        @WebParam(name = "city", partName = "city")
        String city);

    /**
     * 
     * @param uid
     * @param price
     * @param departure
     * @param bookingNumber
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "ok", partName = "ok")
    public boolean addFlight(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "bookingNumber", partName = "bookingNumber")
        String bookingNumber,
        @WebParam(name = "departure", partName = "departure")
        XMLGregorianCalendar departure,
        @WebParam(name = "price", partName = "price")
        BigInteger price);

    /**
     * 
     * @param uid
     * @param hotels
     * @param flights
     */
    @WebMethod
    public void getItinerary(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "flights", mode = WebParam.Mode.OUT, partName = "flights")
        Holder<FlightList> flights,
        @WebParam(name = "hotels", mode = WebParam.Mode.OUT, partName = "hotels")
        Holder<HotelList> hotels);

    /**
     * 
     * @param uid
     * @param price
     * @param bookingNumber
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "ok", partName = "ok")
    public boolean addHotel(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "bookingNumber", partName = "bookingNumber")
        BigInteger bookingNumber,
        @WebParam(name = "price", partName = "price")
        BigInteger price);

    /**
     * 
     * @param uid
     * @param ccInfo
     * @return
     *     returns boolean
     * @throws Fault
     */
    @WebMethod
    @WebResult(name = "ok", partName = "ok")
    public boolean bookItinerary(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "ccInfo", partName = "ccInfo")
        CreditCardInfoType ccInfo)
        throws Fault
    ;

    /**
     * 
     * @param uid
     * @param hotels
     * @param flights
     */
    @WebMethod
    public void getItineraryPostPlanning(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "flights", mode = WebParam.Mode.OUT, partName = "flights")
        Holder<FlightList> flights,
        @WebParam(name = "hotels", mode = WebParam.Mode.OUT, partName = "hotels")
        Holder<HotelList> hotels);

    /**
     * 
     * @param uid
     * @param ccInfo
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "ok", partName = "ok")
    public boolean cancelItineraryPostPlanning(
        @WebParam(name = "uid", partName = "uid")
        String uid,
        @WebParam(name = "ccInfo", partName = "ccInfo")
        CreditCardInfoType ccInfo);

}
